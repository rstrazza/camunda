global:
  identity:
    auth:
      # Disable the Identity authentication for local development
      # it will fall back to basic-auth: demo/demo as default user
      enabled: false

# Disable identity as part of the camunda platform core
identity:
  enabled: false

optimize:
  enabled: false

operate:
  image:
    tag: 8.2.0-alpha3

# Reduce for Zeebe and Gateway the configured replicas and with that the required resources
# to get it running locally
zeebe:
  clusterSize: 1
  partitionCount: 1
  replicationFactor: 1
  pvcSize: 10Gi
  logLevel: info
#  extraInitContainers:
#    - name: init-exporters-stdout
#      image: busybox:1.35
#      command: [ '/bin/sh', '-c' ]
#      args: [ 'wget --no-check-certificate https://github.com/rstrazza/camunda-exporter/releases/download/v0.0.2/camunda-exporter-all.jar -O /exporters/camunda-exporter-all.jar; ls -al /exporters' ]
#      volumeMounts:
#        - name: exporters
#          mountPath: /exporters/
#  env:
#    - name: ZEEBE_BROKER_EXPORTERS_STDOUT_JARPATH
#      value: /exporters/camunda-exporter-all.jar
#    - name: ZEEBE_BROKER_EXPORTERS_STDOUT_CLASSNAME
#      value: com.rstrazza.camunda.exporter.StdOutExporter
#    - name: ZEEBE_BROKER_EXPORTERS_STDOUT_ARGS_URL
#      value: rstrazza-stdout

zeebe-gateway:
  replicas: 1

# Configure elastic search to make it running for local development
elasticsearch:
  imageTag: 7.17.3
  replicas: 1
  minimumMasterNodes: 1
  # Allow no backup for single node setups
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"

  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
#    limits:
#      cpu: "1000m"
#      memory: "512M"

  # Request smaller persistent volumes.
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    # storageClassName: "standard"
    resources:
      requests:
        storage: 15Gi